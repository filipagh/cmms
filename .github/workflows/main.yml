# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
#   pull_request:
#     branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"docker/login-action@49ed152c8eca782a232dede0303416e8f356c37b
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.0.0'
          channel: 'stable'
      - run: flutter pub get
#       - run: flutter test
      - run: flutter build web
        working-directory: ./open_cmms
      - name: Run a multi-line script
        run: |
          echo ${{ secrets.DOCKER_USERNAME }}
          echo test, and deploy your project.
      - name: Log in to Docker Hub
        uses: docker/login-action@v2.0.0
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: pumec/open_cmms
      - run: ls
      - run: ls ./open_cmms
      - name: Build and push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          file: ./open_cmms/Dockerfile
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
      - name: Extract metadata (tags, labels) for Docker Backend
        id: metabackend
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: pumec/open_cmms-backend
      - name: Build and push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          file: ./backend/Dockerfile
          context: .
          push: true
          tags: ${{ steps.metabackend.outputs.tags }}
          labels: ${{ steps.metabackend.outputs.labels }}



      - name: Azure Pipelines Action
        uses: Azure/pipelines@v1.2
        with:
          # Fullyqualified URL to the Azure DevOps organization along with project name(eg, https://dev.azure.com/organization/project-name or https://server.example.com:8080/tfs/DefaultCollection/project-name)
          azure-devops-project-url: https://dev.azure.com/xaghf/DP
          # Name of the Azure Pipline to be triggered
          azure-pipeline-name: 'New release pipeline'
          # Set/Overwrite pipeline variables
#           azure-pipeline-variables: # optional
    # Paste personal access token of the user as value of secret variable:AZURE_DEVOPS_TOKEN
          azure-devops-token: ${{ secrets.AZURE_DEVOPS_TOKEN }}

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.
