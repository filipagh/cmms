{
  "openapi": "3.0.2",
  "info": {
    "title": "Fief Administration API",
    "contact": {
      "name": "Fief",
      "url": "https://docs.fief.dev",
      "email": "contact@fief.dev"
    },
    "license": {
      "name": "Elastic License 2.0 (ELv2)",
      "url": "https://github.com/fief-dev/fief/blob/main/LICENSE.md"
    },
    "version": "0.23.2"
  },
  "servers": [
    {
      "url": "/admin/api"
    },
    {
      "url": "{scheme}://{host}/admin/api",
      "variables": {
        "scheme": {
          "enum": [
            "http",
            "https"
          ],
          "default": "https"
        },
        "host": {
          "default": "fief.fief.dev",
          "description": "Your Fief's workspace hostname"
        }
      }
    }
  ],
  "paths": {
    "/clients/": {
      "get": {
        "tags": [
          "Clients"
        ],
        "summary": "Clients:List",
        "operationId": "clients_list_clients__get",
        "parameters": [
          {
            "required": false,
            "schema": {
              "title": "Query",
              "type": "string"
            },
            "name": "query",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Tenant",
              "type": "string",
              "format": "uuid4"
            },
            "name": "tenant",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Limit",
              "minimum": 0.0,
              "type": "integer",
              "default": 10
            },
            "name": "limit",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Skip",
              "minimum": 0.0,
              "type": "integer",
              "default": 0
            },
            "name": "skip",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Ordering",
              "type": "string"
            },
            "name": "ordering",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedResults_Client_"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "Clients"
        ],
        "summary": "Clients:Create",
        "operationId": "clients_create_clients__post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClientCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Client"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          },
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/clients/{id}": {
      "get": {
        "tags": [
          "Clients"
        ],
        "summary": "Clients:Get",
        "operationId": "clients_get_clients__id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Id",
              "type": "string",
              "format": "uuid4"
            },
            "name": "id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Client"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Clients"
        ],
        "summary": "Clients:Delete",
        "operationId": "clients_delete_clients__id__delete",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Id",
              "type": "string",
              "format": "uuid4"
            },
            "name": "id",
            "in": "path"
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          },
          {
            "APIKeyCookie": []
          }
        ]
      },
      "patch": {
        "tags": [
          "Clients"
        ],
        "summary": "Clients:Update",
        "operationId": "clients_update_clients__id__patch",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Id",
              "type": "string",
              "format": "uuid4"
            },
            "name": "id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClientUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Client"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          },
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/clients/{id}/encryption-key": {
      "post": {
        "tags": [
          "Clients"
        ],
        "summary": "Clients:Encryption Key",
        "operationId": "clients_encryption_key_clients__id__encryption_key_post",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Id",
              "type": "string",
              "format": "uuid4"
            },
            "name": "id",
            "in": "path"
          }
        ],
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          },
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/email-templates/": {
      "get": {
        "tags": [
          "Email templates"
        ],
        "summary": "Email Templates:List",
        "operationId": "email_templates_list_email_templates__get",
        "parameters": [
          {
            "required": false,
            "schema": {
              "title": "Limit",
              "minimum": 0.0,
              "type": "integer",
              "default": 10
            },
            "name": "limit",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Skip",
              "minimum": 0.0,
              "type": "integer",
              "default": 0
            },
            "name": "skip",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Ordering",
              "type": "string"
            },
            "name": "ordering",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedResults_EmailTemplate_"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/email-templates/{id}": {
      "get": {
        "tags": [
          "Email templates"
        ],
        "summary": "Email Templates:Get",
        "operationId": "email_templates_get_email_templates__id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Id",
              "type": "string",
              "format": "uuid4"
            },
            "name": "id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmailTemplate"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      },
      "patch": {
        "tags": [
          "Email templates"
        ],
        "summary": "Email Templates:Update",
        "operationId": "email_templates_update_email_templates__id__patch",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Id",
              "type": "string",
              "format": "uuid4"
            },
            "name": "id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmailTemplateUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmailTemplate"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          },
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/oauth-providers/": {
      "get": {
        "tags": [
          "OAuth Providers"
        ],
        "summary": "Oauth Providers:List",
        "operationId": "oauth_providers_list_oauth_providers__get",
        "parameters": [
          {
            "required": false,
            "schema": {
              "title": "Query",
              "type": "string"
            },
            "name": "query",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Limit",
              "minimum": 0.0,
              "type": "integer",
              "default": 10
            },
            "name": "limit",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Skip",
              "minimum": 0.0,
              "type": "integer",
              "default": 0
            },
            "name": "skip",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Ordering",
              "type": "string"
            },
            "name": "ordering",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedResults_OAuthProvider_"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "OAuth Providers"
        ],
        "summary": "Oauth Providers:Create",
        "operationId": "oauth_providers_create_oauth_providers__post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OAuthProviderCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OAuthProvider"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          },
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/oauth-providers/{id}": {
      "get": {
        "tags": [
          "OAuth Providers"
        ],
        "summary": "Oauth Providers:Get",
        "operationId": "oauth_providers_get_oauth_providers__id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Id",
              "type": "string",
              "format": "uuid4"
            },
            "name": "id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OAuthProvider"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "OAuth Providers"
        ],
        "summary": "Oauth Providers:Delete",
        "operationId": "oauth_providers_delete_oauth_providers__id__delete",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Id",
              "type": "string",
              "format": "uuid4"
            },
            "name": "id",
            "in": "path"
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          },
          {
            "APIKeyCookie": []
          }
        ]
      },
      "patch": {
        "tags": [
          "OAuth Providers"
        ],
        "summary": "Oauth Providers:Update",
        "operationId": "oauth_providers_update_oauth_providers__id__patch",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Id",
              "type": "string",
              "format": "uuid4"
            },
            "name": "id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OAuthProviderUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OAuthProvider"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          },
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/oauth-providers/{id}/access-token/{user_id}": {
      "get": {
        "tags": [
          "OAuth Providers"
        ],
        "summary": "Oauth Providers:Get User Access Token",
        "operationId": "oauth_providers_get_user_access_token_oauth_providers__id__access_token__user_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "User Id",
              "type": "string",
              "format": "uuid4"
            },
            "name": "user_id",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "title": "Id",
              "type": "string",
              "format": "uuid4"
            },
            "name": "id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "title": "Tenant Slug",
              "type": "string"
            },
            "name": "tenant_slug",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OAuthAccountAccessToken"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          },
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/permissions/": {
      "get": {
        "tags": [
          "Permissions"
        ],
        "summary": "Permissions:List",
        "operationId": "permissions_list_permissions__get",
        "parameters": [
          {
            "required": false,
            "schema": {
              "title": "Query",
              "type": "string"
            },
            "name": "query",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Limit",
              "minimum": 0.0,
              "type": "integer",
              "default": 10
            },
            "name": "limit",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Skip",
              "minimum": 0.0,
              "type": "integer",
              "default": 0
            },
            "name": "skip",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Ordering",
              "type": "string"
            },
            "name": "ordering",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedResults_Permission_"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "Permissions"
        ],
        "summary": "Permissions:Create",
        "operationId": "permissions_create_permissions__post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PermissionCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Permission"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          },
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/permissions/{id}": {
      "get": {
        "tags": [
          "Permissions"
        ],
        "summary": "Permissions:Get",
        "operationId": "permissions_get_permissions__id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Id",
              "type": "string",
              "format": "uuid4"
            },
            "name": "id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Permission"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Permissions"
        ],
        "summary": "Permissions:Delete",
        "operationId": "permissions_delete_permissions__id__delete",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Id",
              "type": "string",
              "format": "uuid4"
            },
            "name": "id",
            "in": "path"
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          },
          {
            "APIKeyCookie": []
          }
        ]
      },
      "patch": {
        "tags": [
          "Permissions"
        ],
        "summary": "Permissions:Update",
        "operationId": "permissions_update_permissions__id__patch",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Id",
              "type": "string",
              "format": "uuid4"
            },
            "name": "id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PermissionUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Permission"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          },
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/roles/": {
      "get": {
        "tags": [
          "Roles"
        ],
        "summary": "Roles:List",
        "operationId": "roles_list_roles__get",
        "parameters": [
          {
            "required": false,
            "schema": {
              "title": "Query",
              "type": "string"
            },
            "name": "query",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Limit",
              "minimum": 0.0,
              "type": "integer",
              "default": 10
            },
            "name": "limit",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Skip",
              "minimum": 0.0,
              "type": "integer",
              "default": 0
            },
            "name": "skip",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Ordering",
              "type": "string"
            },
            "name": "ordering",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedResults_Role_"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "Roles"
        ],
        "summary": "Roles:Create",
        "operationId": "roles_create_roles__post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RoleCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Role"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          },
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/roles/{id}": {
      "get": {
        "tags": [
          "Roles"
        ],
        "summary": "Roles:Get",
        "operationId": "roles_get_roles__id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Id",
              "type": "string",
              "format": "uuid4"
            },
            "name": "id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Role"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Roles"
        ],
        "summary": "Roles:Delete",
        "operationId": "roles_delete_roles__id__delete",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Id",
              "type": "string",
              "format": "uuid4"
            },
            "name": "id",
            "in": "path"
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          },
          {
            "APIKeyCookie": []
          }
        ]
      },
      "patch": {
        "tags": [
          "Roles"
        ],
        "summary": "Roles:Update",
        "operationId": "roles_update_roles__id__patch",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Id",
              "type": "string",
              "format": "uuid4"
            },
            "name": "id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RoleUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Role"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          },
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/tenants/": {
      "get": {
        "tags": [
          "Tenants"
        ],
        "summary": "Tenants:List",
        "operationId": "tenants_list_tenants__get",
        "parameters": [
          {
            "required": false,
            "schema": {
              "title": "Query",
              "type": "string"
            },
            "name": "query",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Limit",
              "minimum": 0.0,
              "type": "integer",
              "default": 10
            },
            "name": "limit",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Skip",
              "minimum": 0.0,
              "type": "integer",
              "default": 0
            },
            "name": "skip",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Ordering",
              "type": "string"
            },
            "name": "ordering",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedResults_Tenant_"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "Tenants"
        ],
        "summary": "Tenants:Create",
        "operationId": "tenants_create_tenants__post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TenantCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tenant"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          },
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/tenants/{id}": {
      "get": {
        "tags": [
          "Tenants"
        ],
        "summary": "Tenants:Get",
        "operationId": "tenants_get_tenants__id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Id",
              "type": "string",
              "format": "uuid4"
            },
            "name": "id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tenant"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Tenants"
        ],
        "summary": "Tenants:Delete",
        "operationId": "tenants_delete_tenants__id__delete",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Id",
              "type": "string",
              "format": "uuid4"
            },
            "name": "id",
            "in": "path"
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          },
          {
            "APIKeyCookie": []
          }
        ]
      },
      "patch": {
        "tags": [
          "Tenants"
        ],
        "summary": "Tenants:Update",
        "operationId": "tenants_update_tenants__id__patch",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Id",
              "type": "string",
              "format": "uuid4"
            },
            "name": "id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TenantUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tenant"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          },
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/users/": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Users:List",
        "operationId": "users_list_users__get",
        "parameters": [
          {
            "required": false,
            "schema": {
              "title": "Limit",
              "minimum": 0.0,
              "type": "integer",
              "default": 10
            },
            "name": "limit",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Skip",
              "minimum": 0.0,
              "type": "integer",
              "default": 0
            },
            "name": "skip",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Ordering",
              "type": "string"
            },
            "name": "ordering",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedResults_UserRead_"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Users:Create",
        "operationId": "users_create_users__post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserCreateInternal"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          },
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/users/{id}": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Users:Get",
        "operationId": "users_get_users__id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Id",
              "type": "string",
              "format": "uuid4"
            },
            "name": "id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Users"
        ],
        "summary": "Users:Delete",
        "operationId": "users_delete_users__id__delete",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Id",
              "type": "string",
              "format": "uuid4"
            },
            "name": "id",
            "in": "path"
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          },
          {
            "APIKeyCookie": []
          }
        ]
      },
      "patch": {
        "tags": [
          "Users"
        ],
        "summary": "Users:Update",
        "operationId": "users_update_users__id__patch",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Id",
              "type": "string",
              "format": "uuid4"
            },
            "name": "id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          },
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/users/{id}/permissions": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Users:List Permissions",
        "operationId": "users_list_permissions_users__id__permissions_get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Id",
              "type": "string",
              "format": "uuid4"
            },
            "name": "id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "title": "Limit",
              "minimum": 0.0,
              "type": "integer",
              "default": 10
            },
            "name": "limit",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Skip",
              "minimum": 0.0,
              "type": "integer",
              "default": 0
            },
            "name": "skip",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Ordering",
              "type": "string"
            },
            "name": "ordering",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedResults_UserPermission_"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Users:Create Permission",
        "operationId": "users_create_permission_users__id__permissions_post",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Id",
              "type": "string",
              "format": "uuid4"
            },
            "name": "id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserPermissionCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          },
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/users/{id}/permissions/{permission_id}": {
      "delete": {
        "tags": [
          "Users"
        ],
        "summary": "Users:Delete Permission",
        "operationId": "users_delete_permission_users__id__permissions__permission_id__delete",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Permission Id",
              "type": "string",
              "format": "uuid4"
            },
            "name": "permission_id",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "title": "Id",
              "type": "string",
              "format": "uuid4"
            },
            "name": "id",
            "in": "path"
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          },
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/users/{id}/roles": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Users:List Roles",
        "operationId": "users_list_roles_users__id__roles_get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Id",
              "type": "string",
              "format": "uuid4"
            },
            "name": "id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "title": "Limit",
              "minimum": 0.0,
              "type": "integer",
              "default": 10
            },
            "name": "limit",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Skip",
              "minimum": 0.0,
              "type": "integer",
              "default": 0
            },
            "name": "skip",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Ordering",
              "type": "string"
            },
            "name": "ordering",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedResults_UserRole_"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Users:Create Role",
        "operationId": "users_create_role_users__id__roles_post",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Id",
              "type": "string",
              "format": "uuid4"
            },
            "name": "id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserRoleCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          },
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/users/{id}/roles/{role_id}": {
      "delete": {
        "tags": [
          "Users"
        ],
        "summary": "Users:Delete Role",
        "operationId": "users_delete_role_users__id__roles__role_id__delete",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Role Id",
              "type": "string",
              "format": "uuid4"
            },
            "name": "role_id",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "title": "Id",
              "type": "string",
              "format": "uuid4"
            },
            "name": "id",
            "in": "path"
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          },
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/users/{id}/oauth-accounts": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Users:List Oauth Accounts",
        "operationId": "users_list_oauth_accounts_users__id__oauth_accounts_get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Id",
              "type": "string",
              "format": "uuid4"
            },
            "name": "id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "title": "Limit",
              "minimum": 0.0,
              "type": "integer",
              "default": 10
            },
            "name": "limit",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Skip",
              "minimum": 0.0,
              "type": "integer",
              "default": 0
            },
            "name": "skip",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Ordering",
              "type": "string"
            },
            "name": "ordering",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedResults_OAuthAccount_"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/user-fields/": {
      "get": {
        "tags": [
          "User fields"
        ],
        "summary": "User Fields:List",
        "operationId": "user_fields_list_user_fields__get",
        "parameters": [
          {
            "required": false,
            "schema": {
              "title": "Limit",
              "minimum": 0.0,
              "type": "integer",
              "default": 10
            },
            "name": "limit",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Skip",
              "minimum": 0.0,
              "type": "integer",
              "default": 0
            },
            "name": "skip",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Ordering",
              "type": "string"
            },
            "name": "ordering",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedResults_UserField_"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "User fields"
        ],
        "summary": "User Fields:Create",
        "operationId": "user_fields_create_user_fields__post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserFieldCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserField"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          },
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/user-fields/{id}": {
      "get": {
        "tags": [
          "User fields"
        ],
        "summary": "User Fields:Get",
        "operationId": "user_fields_get_user_fields__id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Id",
              "type": "string",
              "format": "uuid4"
            },
            "name": "id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserField"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "User fields"
        ],
        "summary": "User Fields:Delete",
        "operationId": "user_fields_delete_user_fields__id__delete",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Id",
              "type": "string",
              "format": "uuid4"
            },
            "name": "id",
            "in": "path"
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          },
          {
            "APIKeyCookie": []
          }
        ]
      },
      "patch": {
        "tags": [
          "User fields"
        ],
        "summary": "User Fields:Update",
        "operationId": "user_fields_update_user_fields__id__patch",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Id",
              "type": "string",
              "format": "uuid4"
            },
            "name": "id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserFieldUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserField"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          },
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/webhooks/": {
      "get": {
        "tags": [
          "Webhooks"
        ],
        "summary": "Webhooks:List",
        "operationId": "webhooks_list_webhooks__get",
        "parameters": [
          {
            "required": false,
            "schema": {
              "title": "Limit",
              "minimum": 0.0,
              "type": "integer",
              "default": 10
            },
            "name": "limit",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Skip",
              "minimum": 0.0,
              "type": "integer",
              "default": 0
            },
            "name": "skip",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Ordering",
              "type": "string"
            },
            "name": "ordering",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedResults_Webhook_"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "Webhooks"
        ],
        "summary": "Webhooks:Create",
        "operationId": "webhooks_create_webhooks__post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebhookCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebhookSecret"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          },
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/webhooks/{id}": {
      "get": {
        "tags": [
          "Webhooks"
        ],
        "summary": "Webhooks:Get",
        "operationId": "webhooks_get_webhooks__id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Id",
              "type": "string",
              "format": "uuid4"
            },
            "name": "id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Webhook"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Webhooks"
        ],
        "summary": "Webhooks:Delete",
        "operationId": "webhooks_delete_webhooks__id__delete",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Id",
              "type": "string",
              "format": "uuid4"
            },
            "name": "id",
            "in": "path"
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          },
          {
            "APIKeyCookie": []
          }
        ]
      },
      "patch": {
        "tags": [
          "Webhooks"
        ],
        "summary": "Webhooks:Update",
        "operationId": "webhooks_update_webhooks__id__patch",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Id",
              "type": "string",
              "format": "uuid4"
            },
            "name": "id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebhookUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Webhook"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          },
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/webhooks/{id}/secret": {
      "post": {
        "tags": [
          "Webhooks"
        ],
        "summary": "Webhooks:Secret",
        "operationId": "webhooks_secret_webhooks__id__secret_post",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Id",
              "type": "string",
              "format": "uuid4"
            },
            "name": "id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebhookSecret"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          },
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/webhooks/{id}/logs": {
      "get": {
        "tags": [
          "Webhooks"
        ],
        "summary": "Webhooks:Logs",
        "operationId": "webhooks_logs_webhooks__id__logs_get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Id",
              "type": "string",
              "format": "uuid4"
            },
            "name": "id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "title": "Limit",
              "minimum": 0.0,
              "type": "integer",
              "default": 10
            },
            "name": "limit",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Skip",
              "minimum": 0.0,
              "type": "integer",
              "default": 0
            },
            "name": "skip",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Ordering",
              "type": "string"
            },
            "name": "ordering",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedResults_WebhookLog_"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "AvailableOAuthProvider": {
        "title": "AvailableOAuthProvider",
        "enum": [
          "DISCORD",
          "FACEBOOK",
          "GITHUB",
          "GOOGLE",
          "LINKEDIN",
          "MICROSOFT",
          "REDDIT",
          "OPENID"
        ],
        "type": "string",
        "description": "An enumeration."
      },
      "Client": {
        "title": "Client",
        "required": [
          "created_at",
          "updated_at",
          "id",
          "name",
          "first_party",
          "client_type",
          "client_id",
          "client_secret",
          "redirect_uris",
          "authorization_code_lifetime_seconds",
          "access_id_token_lifetime_seconds",
          "refresh_token_lifetime_seconds",
          "tenant_id",
          "tenant"
        ],
        "type": "object",
        "properties": {
          "created_at": {
            "title": "Created At",
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "title": "Updated At",
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "title": "Id",
            "type": "string",
            "format": "uuid4"
          },
          "name": {
            "title": "Name",
            "type": "string"
          },
          "first_party": {
            "title": "First Party",
            "type": "boolean"
          },
          "client_type": {
            "$ref": "#/components/schemas/ClientType"
          },
          "client_id": {
            "title": "Client Id",
            "type": "string"
          },
          "client_secret": {
            "title": "Client Secret",
            "type": "string"
          },
          "redirect_uris": {
            "title": "Redirect Uris",
            "type": "array",
            "items": {
              "maxLength": 65536,
              "minLength": 1,
              "type": "string",
              "format": "uri"
            }
          },
          "authorization_code_lifetime_seconds": {
            "title": "Authorization Code Lifetime Seconds",
            "type": "integer"
          },
          "access_id_token_lifetime_seconds": {
            "title": "Access Id Token Lifetime Seconds",
            "type": "integer"
          },
          "refresh_token_lifetime_seconds": {
            "title": "Refresh Token Lifetime Seconds",
            "type": "integer"
          },
          "tenant_id": {
            "title": "Tenant Id",
            "type": "string",
            "format": "uuid4"
          },
          "tenant": {
            "$ref": "#/components/schemas/TenantEmbedded"
          },
          "encrypt_jwk": {
            "title": "Encrypt Jwk",
            "type": "string",
            "format": "password",
            "writeOnly": true
          }
        }
      },
      "ClientCreate": {
        "title": "ClientCreate",
        "required": [
          "name",
          "first_party",
          "client_type",
          "redirect_uris",
          "tenant_id"
        ],
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "type": "string"
          },
          "first_party": {
            "title": "First Party",
            "type": "boolean"
          },
          "client_type": {
            "$ref": "#/components/schemas/ClientType"
          },
          "redirect_uris": {
            "title": "Redirect Uris",
            "minItems": 1,
            "type": "array",
            "items": {
              "maxLength": 65536,
              "minLength": 1,
              "type": "string",
              "format": "uri"
            }
          },
          "authorization_code_lifetime_seconds": {
            "title": "Authorization Code Lifetime Seconds",
            "minimum": 0.0,
            "type": "integer"
          },
          "access_id_token_lifetime_seconds": {
            "title": "Access Id Token Lifetime Seconds",
            "minimum": 0.0,
            "type": "integer"
          },
          "refresh_token_lifetime_seconds": {
            "title": "Refresh Token Lifetime Seconds",
            "minimum": 0.0,
            "type": "integer"
          },
          "tenant_id": {
            "title": "Tenant Id",
            "type": "string",
            "format": "uuid4"
          }
        }
      },
      "ClientType": {
        "title": "ClientType",
        "enum": [
          "public",
          "confidential"
        ],
        "type": "string",
        "description": "An enumeration."
      },
      "ClientUpdate": {
        "title": "ClientUpdate",
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "type": "string"
          },
          "first_party": {
            "title": "First Party",
            "type": "boolean"
          },
          "client_type": {
            "$ref": "#/components/schemas/ClientType"
          },
          "redirect_uris": {
            "title": "Redirect Uris",
            "minItems": 1,
            "type": "array",
            "items": {
              "maxLength": 65536,
              "minLength": 1,
              "type": "string",
              "format": "uri"
            }
          },
          "authorization_code_lifetime_seconds": {
            "title": "Authorization Code Lifetime Seconds",
            "minimum": 0.0,
            "type": "integer"
          },
          "access_id_token_lifetime_seconds": {
            "title": "Access Id Token Lifetime Seconds",
            "minimum": 0.0,
            "type": "integer"
          },
          "refresh_token_lifetime_seconds": {
            "title": "Refresh Token Lifetime Seconds",
            "minimum": 0.0,
            "type": "integer"
          }
        }
      },
      "EmailTemplate": {
        "title": "EmailTemplate",
        "required": [
          "created_at",
          "updated_at",
          "id",
          "type",
          "subject",
          "content"
        ],
        "type": "object",
        "properties": {
          "created_at": {
            "title": "Created At",
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "title": "Updated At",
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "title": "Id",
            "type": "string",
            "format": "uuid4"
          },
          "type": {
            "$ref": "#/components/schemas/EmailTemplateType"
          },
          "subject": {
            "title": "Subject",
            "type": "string"
          },
          "content": {
            "title": "Content",
            "type": "string"
          }
        }
      },
      "EmailTemplateType": {
        "title": "EmailTemplateType",
        "enum": [
          "BASE",
          "WELCOME",
          "FORGOT_PASSWORD"
        ],
        "type": "string",
        "description": "An enumeration."
      },
      "EmailTemplateUpdate": {
        "title": "EmailTemplateUpdate",
        "type": "object",
        "properties": {
          "subject": {
            "title": "Subject",
            "type": "string"
          },
          "content": {
            "title": "Content",
            "type": "string"
          }
        }
      },
      "HTTPValidationError": {
        "title": "HTTPValidationError",
        "type": "object",
        "properties": {
          "detail": {
            "title": "Detail",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            }
          }
        }
      },
      "OAuthAccount": {
        "title": "OAuthAccount",
        "required": [
          "created_at",
          "updated_at",
          "id",
          "account_id",
          "oauth_provider_id",
          "oauth_provider"
        ],
        "type": "object",
        "properties": {
          "created_at": {
            "title": "Created At",
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "title": "Updated At",
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "title": "Id",
            "type": "string",
            "format": "uuid4"
          },
          "account_id": {
            "title": "Account Id",
            "type": "string"
          },
          "oauth_provider_id": {
            "title": "Oauth Provider Id",
            "type": "string",
            "format": "uuid4"
          },
          "oauth_provider": {
            "$ref": "#/components/schemas/OAuthProvider"
          }
        }
      },
      "OAuthAccountAccessToken": {
        "title": "OAuthAccountAccessToken",
        "required": [
          "id",
          "account_id",
          "access_token"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "type": "string",
            "format": "uuid4"
          },
          "account_id": {
            "title": "Account Id",
            "type": "string"
          },
          "access_token": {
            "title": "Access Token",
            "type": "string"
          },
          "expires_at": {
            "title": "Expires At",
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "OAuthProvider": {
        "title": "OAuthProvider",
        "required": [
          "created_at",
          "updated_at",
          "id",
          "provider",
          "client_id",
          "client_secret",
          "scopes"
        ],
        "type": "object",
        "properties": {
          "created_at": {
            "title": "Created At",
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "title": "Updated At",
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "title": "Id",
            "type": "string",
            "format": "uuid4"
          },
          "provider": {
            "$ref": "#/components/schemas/AvailableOAuthProvider"
          },
          "client_id": {
            "title": "Client Id",
            "type": "string",
            "format": "password",
            "writeOnly": true
          },
          "client_secret": {
            "title": "Client Secret",
            "type": "string",
            "format": "password",
            "writeOnly": true
          },
          "scopes": {
            "title": "Scopes",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "name": {
            "title": "Name",
            "type": "string"
          },
          "openid_configuration_endpoint": {
            "title": "Openid Configuration Endpoint",
            "maxLength": 2083,
            "minLength": 1,
            "type": "string",
            "format": "uri"
          }
        }
      },
      "OAuthProviderCreate": {
        "title": "OAuthProviderCreate",
        "required": [
          "provider",
          "client_id",
          "client_secret",
          "scopes"
        ],
        "type": "object",
        "properties": {
          "provider": {
            "$ref": "#/components/schemas/AvailableOAuthProvider"
          },
          "client_id": {
            "title": "Client Id",
            "type": "string"
          },
          "client_secret": {
            "title": "Client Secret",
            "type": "string"
          },
          "scopes": {
            "title": "Scopes",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "name": {
            "title": "Name",
            "type": "string"
          },
          "openid_configuration_endpoint": {
            "title": "Openid Configuration Endpoint",
            "maxLength": 2083,
            "minLength": 1,
            "type": "string",
            "format": "uri"
          }
        }
      },
      "OAuthProviderEmbedded": {
        "title": "OAuthProviderEmbedded",
        "required": [
          "created_at",
          "updated_at",
          "id",
          "provider",
          "client_id",
          "client_secret",
          "scopes"
        ],
        "type": "object",
        "properties": {
          "created_at": {
            "title": "Created At",
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "title": "Updated At",
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "title": "Id",
            "type": "string",
            "format": "uuid4"
          },
          "provider": {
            "$ref": "#/components/schemas/AvailableOAuthProvider"
          },
          "client_id": {
            "title": "Client Id",
            "type": "string",
            "format": "password",
            "writeOnly": true
          },
          "client_secret": {
            "title": "Client Secret",
            "type": "string",
            "format": "password",
            "writeOnly": true
          },
          "scopes": {
            "title": "Scopes",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "name": {
            "title": "Name",
            "type": "string"
          },
          "openid_configuration_endpoint": {
            "title": "Openid Configuration Endpoint",
            "maxLength": 2083,
            "minLength": 1,
            "type": "string",
            "format": "uri"
          }
        }
      },
      "OAuthProviderUpdate": {
        "title": "OAuthProviderUpdate",
        "type": "object",
        "properties": {
          "client_id": {
            "title": "Client Id",
            "type": "string"
          },
          "client_secret": {
            "title": "Client Secret",
            "type": "string"
          },
          "scopes": {
            "title": "Scopes",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "name": {
            "title": "Name",
            "type": "string"
          },
          "openid_configuration_endpoint": {
            "title": "Openid Configuration Endpoint",
            "maxLength": 2083,
            "minLength": 1,
            "type": "string",
            "format": "uri"
          }
        }
      },
      "PaginatedResults_Client_": {
        "title": "PaginatedResults[Client]",
        "required": [
          "count",
          "results"
        ],
        "type": "object",
        "properties": {
          "count": {
            "title": "Count",
            "type": "integer"
          },
          "results": {
            "title": "Results",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Client"
            }
          }
        }
      },
      "PaginatedResults_EmailTemplate_": {
        "title": "PaginatedResults[EmailTemplate]",
        "required": [
          "count",
          "results"
        ],
        "type": "object",
        "properties": {
          "count": {
            "title": "Count",
            "type": "integer"
          },
          "results": {
            "title": "Results",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EmailTemplate"
            }
          }
        }
      },
      "PaginatedResults_OAuthAccount_": {
        "title": "PaginatedResults[OAuthAccount]",
        "required": [
          "count",
          "results"
        ],
        "type": "object",
        "properties": {
          "count": {
            "title": "Count",
            "type": "integer"
          },
          "results": {
            "title": "Results",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OAuthAccount"
            }
          }
        }
      },
      "PaginatedResults_OAuthProvider_": {
        "title": "PaginatedResults[OAuthProvider]",
        "required": [
          "count",
          "results"
        ],
        "type": "object",
        "properties": {
          "count": {
            "title": "Count",
            "type": "integer"
          },
          "results": {
            "title": "Results",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OAuthProvider"
            }
          }
        }
      },
      "PaginatedResults_Permission_": {
        "title": "PaginatedResults[Permission]",
        "required": [
          "count",
          "results"
        ],
        "type": "object",
        "properties": {
          "count": {
            "title": "Count",
            "type": "integer"
          },
          "results": {
            "title": "Results",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Permission"
            }
          }
        }
      },
      "PaginatedResults_Role_": {
        "title": "PaginatedResults[Role]",
        "required": [
          "count",
          "results"
        ],
        "type": "object",
        "properties": {
          "count": {
            "title": "Count",
            "type": "integer"
          },
          "results": {
            "title": "Results",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Role"
            }
          }
        }
      },
      "PaginatedResults_Tenant_": {
        "title": "PaginatedResults[Tenant]",
        "required": [
          "count",
          "results"
        ],
        "type": "object",
        "properties": {
          "count": {
            "title": "Count",
            "type": "integer"
          },
          "results": {
            "title": "Results",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Tenant"
            }
          }
        }
      },
      "PaginatedResults_UserField_": {
        "title": "PaginatedResults[UserField]",
        "required": [
          "count",
          "results"
        ],
        "type": "object",
        "properties": {
          "count": {
            "title": "Count",
            "type": "integer"
          },
          "results": {
            "title": "Results",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserField"
            }
          }
        }
      },
      "PaginatedResults_UserPermission_": {
        "title": "PaginatedResults[UserPermission]",
        "required": [
          "count",
          "results"
        ],
        "type": "object",
        "properties": {
          "count": {
            "title": "Count",
            "type": "integer"
          },
          "results": {
            "title": "Results",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserPermission"
            }
          }
        }
      },
      "PaginatedResults_UserRead_": {
        "title": "PaginatedResults[UserRead]",
        "required": [
          "count",
          "results"
        ],
        "type": "object",
        "properties": {
          "count": {
            "title": "Count",
            "type": "integer"
          },
          "results": {
            "title": "Results",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserRead"
            }
          }
        }
      },
      "PaginatedResults_UserRole_": {
        "title": "PaginatedResults[UserRole]",
        "required": [
          "count",
          "results"
        ],
        "type": "object",
        "properties": {
          "count": {
            "title": "Count",
            "type": "integer"
          },
          "results": {
            "title": "Results",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserRole"
            }
          }
        }
      },
      "PaginatedResults_WebhookLog_": {
        "title": "PaginatedResults[WebhookLog]",
        "required": [
          "count",
          "results"
        ],
        "type": "object",
        "properties": {
          "count": {
            "title": "Count",
            "type": "integer"
          },
          "results": {
            "title": "Results",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WebhookLog"
            }
          }
        }
      },
      "PaginatedResults_Webhook_": {
        "title": "PaginatedResults[Webhook]",
        "required": [
          "count",
          "results"
        ],
        "type": "object",
        "properties": {
          "count": {
            "title": "Count",
            "type": "integer"
          },
          "results": {
            "title": "Results",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Webhook"
            }
          }
        }
      },
      "Permission": {
        "title": "Permission",
        "required": [
          "created_at",
          "updated_at",
          "id",
          "name",
          "codename"
        ],
        "type": "object",
        "properties": {
          "created_at": {
            "title": "Created At",
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "title": "Updated At",
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "title": "Id",
            "type": "string",
            "format": "uuid4"
          },
          "name": {
            "title": "Name",
            "type": "string"
          },
          "codename": {
            "title": "Codename",
            "type": "string"
          }
        }
      },
      "PermissionCreate": {
        "title": "PermissionCreate",
        "required": [
          "name",
          "codename"
        ],
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "type": "string"
          },
          "codename": {
            "title": "Codename",
            "type": "string"
          }
        }
      },
      "PermissionEmbedded": {
        "title": "PermissionEmbedded",
        "required": [
          "created_at",
          "updated_at",
          "id",
          "name",
          "codename"
        ],
        "type": "object",
        "properties": {
          "created_at": {
            "title": "Created At",
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "title": "Updated At",
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "title": "Id",
            "type": "string",
            "format": "uuid4"
          },
          "name": {
            "title": "Name",
            "type": "string"
          },
          "codename": {
            "title": "Codename",
            "type": "string"
          }
        }
      },
      "PermissionUpdate": {
        "title": "PermissionUpdate",
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "type": "string"
          },
          "codename": {
            "title": "Codename",
            "type": "string"
          }
        }
      },
      "Role": {
        "title": "Role",
        "required": [
          "created_at",
          "updated_at",
          "id",
          "name",
          "granted_by_default",
          "permissions"
        ],
        "type": "object",
        "properties": {
          "created_at": {
            "title": "Created At",
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "title": "Updated At",
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "title": "Id",
            "type": "string",
            "format": "uuid4"
          },
          "name": {
            "title": "Name",
            "type": "string"
          },
          "granted_by_default": {
            "title": "Granted By Default",
            "type": "boolean"
          },
          "permissions": {
            "title": "Permissions",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PermissionEmbedded"
            }
          }
        }
      },
      "RoleCreate": {
        "title": "RoleCreate",
        "required": [
          "name",
          "granted_by_default",
          "permissions"
        ],
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "type": "string"
          },
          "granted_by_default": {
            "title": "Granted By Default",
            "type": "boolean"
          },
          "permissions": {
            "title": "Permissions",
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid4"
            }
          }
        }
      },
      "RoleEmbedded": {
        "title": "RoleEmbedded",
        "required": [
          "created_at",
          "updated_at",
          "id",
          "name",
          "granted_by_default"
        ],
        "type": "object",
        "properties": {
          "created_at": {
            "title": "Created At",
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "title": "Updated At",
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "title": "Id",
            "type": "string",
            "format": "uuid4"
          },
          "name": {
            "title": "Name",
            "type": "string"
          },
          "granted_by_default": {
            "title": "Granted By Default",
            "type": "boolean"
          }
        }
      },
      "RoleUpdate": {
        "title": "RoleUpdate",
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "type": "string"
          },
          "granted_by_default": {
            "title": "Granted By Default",
            "type": "boolean"
          },
          "permissions": {
            "title": "Permissions",
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid4"
            }
          }
        }
      },
      "Tenant": {
        "title": "Tenant",
        "required": [
          "created_at",
          "updated_at",
          "id",
          "name",
          "default",
          "slug",
          "registration_allowed",
          "oauth_providers"
        ],
        "type": "object",
        "properties": {
          "created_at": {
            "title": "Created At",
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "title": "Updated At",
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "title": "Id",
            "type": "string",
            "format": "uuid4"
          },
          "name": {
            "title": "Name",
            "type": "string"
          },
          "default": {
            "title": "Default",
            "type": "boolean"
          },
          "slug": {
            "title": "Slug",
            "type": "string"
          },
          "registration_allowed": {
            "title": "Registration Allowed",
            "type": "boolean"
          },
          "theme_id": {
            "title": "Theme Id",
            "type": "string",
            "format": "uuid4"
          },
          "logo_url": {
            "title": "Logo Url",
            "maxLength": 65536,
            "minLength": 1,
            "type": "string",
            "format": "uri"
          },
          "oauth_providers": {
            "title": "Oauth Providers",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OAuthProviderEmbedded"
            }
          }
        }
      },
      "TenantCreate": {
        "title": "TenantCreate",
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "type": "string"
          },
          "registration_allowed": {
            "title": "Registration Allowed",
            "type": "boolean",
            "default": true
          },
          "theme_id": {
            "title": "Theme Id",
            "type": "string",
            "format": "uuid4"
          },
          "logo_url": {
            "title": "Logo Url",
            "maxLength": 65536,
            "minLength": 1,
            "type": "string",
            "format": "uri"
          },
          "oauth_providers": {
            "title": "Oauth Providers",
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid4"
            }
          }
        }
      },
      "TenantEmbedded": {
        "title": "TenantEmbedded",
        "required": [
          "created_at",
          "updated_at",
          "id",
          "name",
          "default",
          "slug",
          "registration_allowed"
        ],
        "type": "object",
        "properties": {
          "created_at": {
            "title": "Created At",
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "title": "Updated At",
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "title": "Id",
            "type": "string",
            "format": "uuid4"
          },
          "name": {
            "title": "Name",
            "type": "string"
          },
          "default": {
            "title": "Default",
            "type": "boolean"
          },
          "slug": {
            "title": "Slug",
            "type": "string"
          },
          "registration_allowed": {
            "title": "Registration Allowed",
            "type": "boolean"
          },
          "theme_id": {
            "title": "Theme Id",
            "type": "string",
            "format": "uuid4"
          },
          "logo_url": {
            "title": "Logo Url",
            "maxLength": 65536,
            "minLength": 1,
            "type": "string",
            "format": "uri"
          }
        }
      },
      "TenantUpdate": {
        "title": "TenantUpdate",
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "type": "string"
          },
          "registration_allowed": {
            "title": "Registration Allowed",
            "type": "boolean"
          },
          "theme_id": {
            "title": "Theme Id",
            "type": "string",
            "format": "uuid4"
          },
          "logo_url": {
            "title": "Logo Url",
            "maxLength": 65536,
            "minLength": 1,
            "type": "string",
            "format": "uri"
          },
          "oauth_providers": {
            "title": "Oauth Providers",
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid4"
            }
          }
        }
      },
      "UserCreateInternal": {
        "title": "UserCreateInternal",
        "required": [
          "email",
          "password",
          "tenant_id"
        ],
        "type": "object",
        "properties": {
          "email": {
            "title": "Email",
            "type": "string",
            "format": "email"
          },
          "password": {
            "title": "Password",
            "type": "string"
          },
          "is_active": {
            "title": "Is Active",
            "type": "boolean",
            "default": true
          },
          "is_superuser": {
            "title": "Is Superuser",
            "type": "boolean",
            "default": false
          },
          "is_verified": {
            "title": "Is Verified",
            "type": "boolean",
            "default": false
          },
          "fields": {
            "$ref": "#/components/schemas/UserFields"
          },
          "tenant_id": {
            "title": "Tenant Id",
            "type": "string",
            "format": "uuid4"
          }
        },
        "description": "Utility model so that we can hook into the logic of UserManager.create\nand add some attributes before persisting into database."
      },
      "UserField": {
        "title": "UserField",
        "required": [
          "created_at",
          "updated_at",
          "id",
          "name",
          "slug",
          "type",
          "configuration"
        ],
        "type": "object",
        "properties": {
          "created_at": {
            "title": "Created At",
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "title": "Updated At",
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "title": "Id",
            "type": "string",
            "format": "uuid4"
          },
          "name": {
            "title": "Name",
            "type": "string"
          },
          "slug": {
            "title": "Slug",
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/UserFieldType"
          },
          "configuration": {
            "$ref": "#/components/schemas/UserFieldConfiguration"
          }
        }
      },
      "UserFieldConfiguration": {
        "title": "UserFieldConfiguration",
        "required": [
          "at_registration",
          "required",
          "at_update"
        ],
        "type": "object",
        "properties": {
          "at_registration": {
            "title": "At Registration",
            "type": "boolean"
          },
          "required": {
            "title": "Required",
            "type": "boolean"
          },
          "at_update": {
            "title": "At Update",
            "type": "boolean"
          },
          "choices": {
            "title": "Choices",
            "type": "array",
            "items": {
              "type": "array",
              "items": {}
            }
          },
          "default": {
            "title": "Default",
            "anyOf": [
              {
                "title": "timezone",
                "enum": [
                  "Africa/Abidjan",
                  "Africa/Accra",
                  "Africa/Addis_Ababa",
                  "Africa/Algiers",
                  "Africa/Asmara",
                  "Africa/Bamako",
                  "Africa/Bangui",
                  "Africa/Banjul",
                  "Africa/Bissau",
                  "Africa/Blantyre",
                  "Africa/Brazzaville",
                  "Africa/Bujumbura",
                  "Africa/Cairo",
                  "Africa/Casablanca",
                  "Africa/Ceuta",
                  "Africa/Conakry",
                  "Africa/Dakar",
                  "Africa/Dar_es_Salaam",
                  "Africa/Djibouti",
                  "Africa/Douala",
                  "Africa/El_Aaiun",
                  "Africa/Freetown",
                  "Africa/Gaborone",
                  "Africa/Harare",
                  "Africa/Johannesburg",
                  "Africa/Juba",
                  "Africa/Kampala",
                  "Africa/Khartoum",
                  "Africa/Kigali",
                  "Africa/Kinshasa",
                  "Africa/Lagos",
                  "Africa/Libreville",
                  "Africa/Lome",
                  "Africa/Luanda",
                  "Africa/Lubumbashi",
                  "Africa/Lusaka",
                  "Africa/Malabo",
                  "Africa/Maputo",
                  "Africa/Maseru",
                  "Africa/Mbabane",
                  "Africa/Mogadishu",
                  "Africa/Monrovia",
                  "Africa/Nairobi",
                  "Africa/Ndjamena",
                  "Africa/Niamey",
                  "Africa/Nouakchott",
                  "Africa/Ouagadougou",
                  "Africa/Porto-Novo",
                  "Africa/Sao_Tome",
                  "Africa/Tripoli",
                  "Africa/Tunis",
                  "Africa/Windhoek",
                  "America/Adak",
                  "America/Anchorage",
                  "America/Anguilla",
                  "America/Antigua",
                  "America/Araguaina",
                  "America/Argentina/Buenos_Aires",
                  "America/Argentina/Catamarca",
                  "America/Argentina/Cordoba",
                  "America/Argentina/Jujuy",
                  "America/Argentina/La_Rioja",
                  "America/Argentina/Mendoza",
                  "America/Argentina/Rio_Gallegos",
                  "America/Argentina/Salta",
                  "America/Argentina/San_Juan",
                  "America/Argentina/San_Luis",
                  "America/Argentina/Tucuman",
                  "America/Argentina/Ushuaia",
                  "America/Aruba",
                  "America/Asuncion",
                  "America/Atikokan",
                  "America/Bahia",
                  "America/Bahia_Banderas",
                  "America/Barbados",
                  "America/Belem",
                  "America/Belize",
                  "America/Blanc-Sablon",
                  "America/Boa_Vista",
                  "America/Bogota",
                  "America/Boise",
                  "America/Cambridge_Bay",
                  "America/Campo_Grande",
                  "America/Cancun",
                  "America/Caracas",
                  "America/Cayenne",
                  "America/Cayman",
                  "America/Chicago",
                  "America/Chihuahua",
                  "America/Ciudad_Juarez",
                  "America/Costa_Rica",
                  "America/Creston",
                  "America/Cuiaba",
                  "America/Curacao",
                  "America/Danmarkshavn",
                  "America/Dawson",
                  "America/Dawson_Creek",
                  "America/Denver",
                  "America/Detroit",
                  "America/Dominica",
                  "America/Edmonton",
                  "America/Eirunepe",
                  "America/El_Salvador",
                  "America/Fort_Nelson",
                  "America/Fortaleza",
                  "America/Glace_Bay",
                  "America/Goose_Bay",
                  "America/Grand_Turk",
                  "America/Grenada",
                  "America/Guadeloupe",
                  "America/Guatemala",
                  "America/Guayaquil",
                  "America/Guyana",
                  "America/Halifax",
                  "America/Havana",
                  "America/Hermosillo",
                  "America/Indiana/Indianapolis",
                  "America/Indiana/Knox",
                  "America/Indiana/Marengo",
                  "America/Indiana/Petersburg",
                  "America/Indiana/Tell_City",
                  "America/Indiana/Vevay",
                  "America/Indiana/Vincennes",
                  "America/Indiana/Winamac",
                  "America/Inuvik",
                  "America/Iqaluit",
                  "America/Jamaica",
                  "America/Juneau",
                  "America/Kentucky/Louisville",
                  "America/Kentucky/Monticello",
                  "America/Kralendijk",
                  "America/La_Paz",
                  "America/Lima",
                  "America/Los_Angeles",
                  "America/Lower_Princes",
                  "America/Maceio",
                  "America/Managua",
                  "America/Manaus",
                  "America/Marigot",
                  "America/Martinique",
                  "America/Matamoros",
                  "America/Mazatlan",
                  "America/Menominee",
                  "America/Merida",
                  "America/Metlakatla",
                  "America/Mexico_City",
                  "America/Miquelon",
                  "America/Moncton",
                  "America/Monterrey",
                  "America/Montevideo",
                  "America/Montserrat",
                  "America/Nassau",
                  "America/New_York",
                  "America/Nome",
                  "America/Noronha",
                  "America/North_Dakota/Beulah",
                  "America/North_Dakota/Center",
                  "America/North_Dakota/New_Salem",
                  "America/Nuuk",
                  "America/Ojinaga",
                  "America/Panama",
                  "America/Paramaribo",
                  "America/Phoenix",
                  "America/Port-au-Prince",
                  "America/Port_of_Spain",
                  "America/Porto_Velho",
                  "America/Puerto_Rico",
                  "America/Punta_Arenas",
                  "America/Rankin_Inlet",
                  "America/Recife",
                  "America/Regina",
                  "America/Resolute",
                  "America/Rio_Branco",
                  "America/Santarem",
                  "America/Santiago",
                  "America/Santo_Domingo",
                  "America/Sao_Paulo",
                  "America/Scoresbysund",
                  "America/Sitka",
                  "America/St_Barthelemy",
                  "America/St_Johns",
                  "America/St_Kitts",
                  "America/St_Lucia",
                  "America/St_Thomas",
                  "America/St_Vincent",
                  "America/Swift_Current",
                  "America/Tegucigalpa",
                  "America/Thule",
                  "America/Tijuana",
                  "America/Toronto",
                  "America/Tortola",
                  "America/Vancouver",
                  "America/Whitehorse",
                  "America/Winnipeg",
                  "America/Yakutat",
                  "America/Yellowknife",
                  "Antarctica/Casey",
                  "Antarctica/Davis",
                  "Antarctica/DumontDUrville",
                  "Antarctica/Macquarie",
                  "Antarctica/Mawson",
                  "Antarctica/McMurdo",
                  "Antarctica/Palmer",
                  "Antarctica/Rothera",
                  "Antarctica/Syowa",
                  "Antarctica/Troll",
                  "Antarctica/Vostok",
                  "Arctic/Longyearbyen",
                  "Asia/Aden",
                  "Asia/Almaty",
                  "Asia/Amman",
                  "Asia/Anadyr",
                  "Asia/Aqtau",
                  "Asia/Aqtobe",
                  "Asia/Ashgabat",
                  "Asia/Atyrau",
                  "Asia/Baghdad",
                  "Asia/Bahrain",
                  "Asia/Baku",
                  "Asia/Bangkok",
                  "Asia/Barnaul",
                  "Asia/Beirut",
                  "Asia/Bishkek",
                  "Asia/Brunei",
                  "Asia/Chita",
                  "Asia/Choibalsan",
                  "Asia/Colombo",
                  "Asia/Damascus",
                  "Asia/Dhaka",
                  "Asia/Dili",
                  "Asia/Dubai",
                  "Asia/Dushanbe",
                  "Asia/Famagusta",
                  "Asia/Gaza",
                  "Asia/Hebron",
                  "Asia/Ho_Chi_Minh",
                  "Asia/Hong_Kong",
                  "Asia/Hovd",
                  "Asia/Irkutsk",
                  "Asia/Jakarta",
                  "Asia/Jayapura",
                  "Asia/Jerusalem",
                  "Asia/Kabul",
                  "Asia/Kamchatka",
                  "Asia/Karachi",
                  "Asia/Kathmandu",
                  "Asia/Khandyga",
                  "Asia/Kolkata",
                  "Asia/Krasnoyarsk",
                  "Asia/Kuala_Lumpur",
                  "Asia/Kuching",
                  "Asia/Kuwait",
                  "Asia/Macau",
                  "Asia/Magadan",
                  "Asia/Makassar",
                  "Asia/Manila",
                  "Asia/Muscat",
                  "Asia/Nicosia",
                  "Asia/Novokuznetsk",
                  "Asia/Novosibirsk",
                  "Asia/Omsk",
                  "Asia/Oral",
                  "Asia/Phnom_Penh",
                  "Asia/Pontianak",
                  "Asia/Pyongyang",
                  "Asia/Qatar",
                  "Asia/Qostanay",
                  "Asia/Qyzylorda",
                  "Asia/Riyadh",
                  "Asia/Sakhalin",
                  "Asia/Samarkand",
                  "Asia/Seoul",
                  "Asia/Shanghai",
                  "Asia/Singapore",
                  "Asia/Srednekolymsk",
                  "Asia/Taipei",
                  "Asia/Tashkent",
                  "Asia/Tbilisi",
                  "Asia/Tehran",
                  "Asia/Thimphu",
                  "Asia/Tokyo",
                  "Asia/Tomsk",
                  "Asia/Ulaanbaatar",
                  "Asia/Urumqi",
                  "Asia/Ust-Nera",
                  "Asia/Vientiane",
                  "Asia/Vladivostok",
                  "Asia/Yakutsk",
                  "Asia/Yangon",
                  "Asia/Yekaterinburg",
                  "Asia/Yerevan",
                  "Atlantic/Azores",
                  "Atlantic/Bermuda",
                  "Atlantic/Canary",
                  "Atlantic/Cape_Verde",
                  "Atlantic/Faroe",
                  "Atlantic/Madeira",
                  "Atlantic/Reykjavik",
                  "Atlantic/South_Georgia",
                  "Atlantic/St_Helena",
                  "Atlantic/Stanley",
                  "Australia/Adelaide",
                  "Australia/Brisbane",
                  "Australia/Broken_Hill",
                  "Australia/Darwin",
                  "Australia/Eucla",
                  "Australia/Hobart",
                  "Australia/Lindeman",
                  "Australia/Lord_Howe",
                  "Australia/Melbourne",
                  "Australia/Perth",
                  "Australia/Sydney",
                  "Canada/Atlantic",
                  "Canada/Central",
                  "Canada/Eastern",
                  "Canada/Mountain",
                  "Canada/Newfoundland",
                  "Canada/Pacific",
                  "Europe/Amsterdam",
                  "Europe/Andorra",
                  "Europe/Astrakhan",
                  "Europe/Athens",
                  "Europe/Belgrade",
                  "Europe/Berlin",
                  "Europe/Bratislava",
                  "Europe/Brussels",
                  "Europe/Bucharest",
                  "Europe/Budapest",
                  "Europe/Busingen",
                  "Europe/Chisinau",
                  "Europe/Copenhagen",
                  "Europe/Dublin",
                  "Europe/Gibraltar",
                  "Europe/Guernsey",
                  "Europe/Helsinki",
                  "Europe/Isle_of_Man",
                  "Europe/Istanbul",
                  "Europe/Jersey",
                  "Europe/Kaliningrad",
                  "Europe/Kirov",
                  "Europe/Kyiv",
                  "Europe/Lisbon",
                  "Europe/Ljubljana",
                  "Europe/London",
                  "Europe/Luxembourg",
                  "Europe/Madrid",
                  "Europe/Malta",
                  "Europe/Mariehamn",
                  "Europe/Minsk",
                  "Europe/Monaco",
                  "Europe/Moscow",
                  "Europe/Oslo",
                  "Europe/Paris",
                  "Europe/Podgorica",
                  "Europe/Prague",
                  "Europe/Riga",
                  "Europe/Rome",
                  "Europe/Samara",
                  "Europe/San_Marino",
                  "Europe/Sarajevo",
                  "Europe/Saratov",
                  "Europe/Simferopol",
                  "Europe/Skopje",
                  "Europe/Sofia",
                  "Europe/Stockholm",
                  "Europe/Tallinn",
                  "Europe/Tirane",
                  "Europe/Ulyanovsk",
                  "Europe/Vaduz",
                  "Europe/Vatican",
                  "Europe/Vienna",
                  "Europe/Vilnius",
                  "Europe/Volgograd",
                  "Europe/Warsaw",
                  "Europe/Zagreb",
                  "Europe/Zurich",
                  "GMT",
                  "Indian/Antananarivo",
                  "Indian/Chagos",
                  "Indian/Christmas",
                  "Indian/Cocos",
                  "Indian/Comoro",
                  "Indian/Kerguelen",
                  "Indian/Mahe",
                  "Indian/Maldives",
                  "Indian/Mauritius",
                  "Indian/Mayotte",
                  "Indian/Reunion",
                  "Pacific/Apia",
                  "Pacific/Auckland",
                  "Pacific/Bougainville",
                  "Pacific/Chatham",
                  "Pacific/Chuuk",
                  "Pacific/Easter",
                  "Pacific/Efate",
                  "Pacific/Fakaofo",
                  "Pacific/Fiji",
                  "Pacific/Funafuti",
                  "Pacific/Galapagos",
                  "Pacific/Gambier",
                  "Pacific/Guadalcanal",
                  "Pacific/Guam",
                  "Pacific/Honolulu",
                  "Pacific/Kanton",
                  "Pacific/Kiritimati",
                  "Pacific/Kosrae",
                  "Pacific/Kwajalein",
                  "Pacific/Majuro",
                  "Pacific/Marquesas",
                  "Pacific/Midway",
                  "Pacific/Nauru",
                  "Pacific/Niue",
                  "Pacific/Norfolk",
                  "Pacific/Noumea",
                  "Pacific/Pago_Pago",
                  "Pacific/Palau",
                  "Pacific/Pitcairn",
                  "Pacific/Pohnpei",
                  "Pacific/Port_Moresby",
                  "Pacific/Rarotonga",
                  "Pacific/Saipan",
                  "Pacific/Tahiti",
                  "Pacific/Tarawa",
                  "Pacific/Tongatapu",
                  "Pacific/Wake",
                  "Pacific/Wallis",
                  "US/Alaska",
                  "US/Arizona",
                  "US/Central",
                  "US/Eastern",
                  "US/Hawaii",
                  "US/Mountain",
                  "US/Pacific",
                  "UTC"
                ],
                "type": "string"
              },
              {
                "type": "boolean"
              },
              {
                "type": "integer"
              },
              {
                "type": "string"
              }
            ]
          }
        }
      },
      "UserFieldCreate": {
        "title": "UserFieldCreate",
        "required": [
          "name",
          "slug",
          "type",
          "configuration"
        ],
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "type": "string"
          },
          "slug": {
            "title": "Slug",
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/UserFieldType"
          },
          "configuration": {
            "$ref": "#/components/schemas/UserFieldConfiguration"
          }
        }
      },
      "UserFieldType": {
        "title": "UserFieldType",
        "enum": [
          "STRING",
          "INTEGER",
          "BOOLEAN",
          "DATE",
          "DATETIME",
          "CHOICE",
          "PHONE_NUMBER",
          "ADDRESS",
          "TIMEZONE"
        ],
        "type": "string",
        "description": "An enumeration."
      },
      "UserFieldUpdate": {
        "title": "UserFieldUpdate",
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "type": "string"
          },
          "slug": {
            "title": "Slug",
            "type": "string"
          },
          "configuration": {
            "$ref": "#/components/schemas/UserFieldConfiguration"
          }
        }
      },
      "UserFields": {
        "title": "UserFields",
        "type": "object",
        "properties": {}
      },
      "UserPermission": {
        "title": "UserPermission",
        "required": [
          "created_at",
          "updated_at",
          "user_id",
          "permission_id",
          "permission"
        ],
        "type": "object",
        "properties": {
          "created_at": {
            "title": "Created At",
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "title": "Updated At",
            "type": "string",
            "format": "date-time"
          },
          "user_id": {
            "title": "User Id",
            "type": "string",
            "format": "uuid4"
          },
          "permission_id": {
            "title": "Permission Id",
            "type": "string",
            "format": "uuid4"
          },
          "from_role_id": {
            "title": "From Role Id",
            "type": "string",
            "format": "uuid4"
          },
          "permission": {
            "$ref": "#/components/schemas/PermissionEmbedded"
          },
          "from_role": {
            "$ref": "#/components/schemas/RoleEmbedded"
          }
        }
      },
      "UserPermissionCreate": {
        "title": "UserPermissionCreate",
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "type": "string",
            "format": "uuid4"
          }
        }
      },
      "UserRead": {
        "title": "UserRead",
        "required": [
          "created_at",
          "updated_at",
          "email",
          "tenant_id",
          "tenant",
          "fields"
        ],
        "type": "object",
        "properties": {
          "created_at": {
            "title": "Created At",
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "title": "Updated At",
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "title": "Id"
          },
          "email": {
            "title": "Email",
            "type": "string",
            "format": "email"
          },
          "is_active": {
            "title": "Is Active",
            "type": "boolean",
            "default": true
          },
          "is_superuser": {
            "title": "Is Superuser",
            "type": "boolean",
            "default": false
          },
          "is_verified": {
            "title": "Is Verified",
            "type": "boolean",
            "default": false
          },
          "tenant_id": {
            "title": "Tenant Id",
            "type": "string",
            "format": "uuid4"
          },
          "tenant": {
            "$ref": "#/components/schemas/TenantEmbedded"
          },
          "fields": {
            "title": "Fields",
            "type": "object"
          }
        },
        "description": "Base User model."
      },
      "UserRole": {
        "title": "UserRole",
        "required": [
          "created_at",
          "updated_at",
          "user_id",
          "role_id",
          "role"
        ],
        "type": "object",
        "properties": {
          "created_at": {
            "title": "Created At",
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "title": "Updated At",
            "type": "string",
            "format": "date-time"
          },
          "user_id": {
            "title": "User Id",
            "type": "string",
            "format": "uuid4"
          },
          "role_id": {
            "title": "Role Id",
            "type": "string",
            "format": "uuid4"
          },
          "role": {
            "$ref": "#/components/schemas/RoleEmbedded"
          }
        }
      },
      "UserRoleCreate": {
        "title": "UserRoleCreate",
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "type": "string",
            "format": "uuid4"
          }
        }
      },
      "ValidationError": {
        "title": "ValidationError",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "type": "object",
        "properties": {
          "loc": {
            "title": "Location",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            }
          },
          "msg": {
            "title": "Message",
            "type": "string"
          },
          "type": {
            "title": "Error Type",
            "type": "string"
          }
        }
      },
      "Webhook": {
        "title": "Webhook",
        "required": [
          "created_at",
          "updated_at",
          "id",
          "url",
          "events"
        ],
        "type": "object",
        "properties": {
          "created_at": {
            "title": "Created At",
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "title": "Updated At",
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "title": "Id",
            "type": "string",
            "format": "uuid4"
          },
          "url": {
            "title": "Url",
            "maxLength": 2083,
            "minLength": 1,
            "type": "string",
            "format": "uri"
          },
          "events": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WebhookEventType"
            }
          }
        }
      },
      "WebhookCreate": {
        "title": "WebhookCreate",
        "required": [
          "url",
          "events"
        ],
        "type": "object",
        "properties": {
          "url": {
            "title": "Url",
            "maxLength": 2083,
            "minLength": 1,
            "type": "string",
            "format": "uri"
          },
          "events": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WebhookEventType"
            }
          }
        }
      },
      "WebhookEventType": {
        "title": "WebhookEventType",
        "enum": [
          "client.created",
          "client.updated",
          "client.deleted",
          "email_template.updated",
          "oauth_provider.created",
          "oauth_provider.updated",
          "oauth_provider.deleted",
          "permission.created",
          "permission.updated",
          "permission.deleted",
          "role.created",
          "role.updated",
          "role.deleted",
          "tenant.created",
          "tenant.updated",
          "tenant.deleted",
          "user.created",
          "user.updated",
          "user.deleted",
          "user.forgot_password_requested",
          "user.password_reset",
          "user_field.created",
          "user_field.updated",
          "user_field.deleted",
          "user_permission.created",
          "user_permission.deleted",
          "user_role.created",
          "user_role.deleted"
        ],
        "type": "string",
        "description": "An enumeration."
      },
      "WebhookLog": {
        "title": "WebhookLog",
        "required": [
          "created_at",
          "updated_at",
          "id",
          "webhook_id",
          "event",
          "attempt",
          "payload",
          "success"
        ],
        "type": "object",
        "properties": {
          "created_at": {
            "title": "Created At",
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "title": "Updated At",
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "title": "Id",
            "type": "string",
            "format": "uuid4"
          },
          "webhook_id": {
            "title": "Webhook Id",
            "type": "string",
            "format": "uuid4"
          },
          "event": {
            "$ref": "#/components/schemas/WebhookEventType"
          },
          "attempt": {
            "title": "Attempt",
            "type": "integer"
          },
          "payload": {
            "title": "Payload",
            "type": "string"
          },
          "success": {
            "title": "Success",
            "type": "boolean"
          },
          "response": {
            "title": "Response",
            "type": "string"
          },
          "error_type": {
            "title": "Error Type",
            "type": "string"
          },
          "error_message": {
            "title": "Error Message",
            "type": "string"
          }
        }
      },
      "WebhookSecret": {
        "title": "WebhookSecret",
        "required": [
          "created_at",
          "updated_at",
          "id",
          "url",
          "events",
          "secret"
        ],
        "type": "object",
        "properties": {
          "created_at": {
            "title": "Created At",
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "title": "Updated At",
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "title": "Id",
            "type": "string",
            "format": "uuid4"
          },
          "url": {
            "title": "Url",
            "maxLength": 2083,
            "minLength": 1,
            "type": "string",
            "format": "uri"
          },
          "events": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WebhookEventType"
            }
          },
          "secret": {
            "title": "Secret",
            "type": "string"
          }
        }
      },
      "WebhookUpdate": {
        "title": "WebhookUpdate",
        "type": "object",
        "properties": {
          "url": {
            "title": "Url",
            "maxLength": 2083,
            "minLength": 1,
            "type": "string",
            "format": "uri"
          },
          "events": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WebhookEventType"
            }
          }
        }
      }
    },
    "securitySchemes": {
      "HTTPBearer": {
        "type": "http",
        "scheme": "bearer"
      },
      "APIKeyCookie": {
        "type": "apiKey",
        "in": "cookie",
        "name": "fief_admin_session"
      }
    }
  }
}